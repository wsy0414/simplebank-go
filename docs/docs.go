// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/balance": {
            "post": {
                "description": "CreateBalance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance"
                ],
                "summary": "CreateBalance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwtToken",
                        "name": "authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "CreateBalanceRequest",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.CreateBalanceRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.CreateBalanceResponse"
                        }
                    }
                }
            }
        },
        "/balance/activity": {
            "get": {
                "description": "get activity log by user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance"
                ],
                "summary": "GetActivity",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwtToken",
                        "name": "authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.ListActivityResponse"
                            }
                        }
                    }
                }
            }
        },
        "/balance/deposite": {
            "post": {
                "description": "deposite amount into specify currency balance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance"
                ],
                "summary": "Deposite",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwtToken",
                        "name": "authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "DepositeRequestParam",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.DepositeRequestParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.DepositeResponse"
                        }
                    }
                }
            }
        },
        "/balance/list": {
            "get": {
                "description": "get all balance by user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance"
                ],
                "summary": "ListBalance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwtToken",
                        "name": "authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.GetBalanceResponse"
                            }
                        }
                    }
                }
            }
        },
        "/balance/transfer": {
            "post": {
                "description": "transfer amount from specify currency balance to other user's  balance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance"
                ],
                "summary": "Transfer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwtToken",
                        "name": "authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "TransferRequestParam",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.TransferRequestParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.TransferResponse"
                        }
                    }
                }
            }
        },
        "/balance/withdraw": {
            "post": {
                "description": "withdraw amount from specify currency balance",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance"
                ],
                "summary": "Withdraw",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwtToken",
                        "name": "authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "WithdrawRequestParam",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.WithdrawRequestParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.WithdrawResponse"
                        }
                    }
                }
            }
        },
        "/balance/{currency}": {
            "get": {
                "description": "get specify balance by user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "balance"
                ],
                "summary": "GetBalance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwtToken",
                        "name": "authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "currency(TWD||USD||JPN)",
                        "name": "currency",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GetBalanceResponse"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "login",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "LoginRequestParam",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.LoginRequestParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.LoginResponse"
                        }
                    }
                }
            }
        },
        "/signup": {
            "post": {
                "description": "SignUp a Guest Account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "SignUp",
                "parameters": [
                    {
                        "description": "Account ID",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.SignUpRequestParam"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.SignUpResponse"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "description": "GetUserInfo",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "GetUserInfo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "jwtToken",
                        "name": "authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.GetUserInfoResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Balance": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                }
            }
        },
        "model.CreateBalanceRequest": {
            "type": "object",
            "required": [
                "amount",
                "currency"
            ],
            "properties": {
                "amount": {
                    "type": "number",
                    "minimum": 0
                },
                "currency": {
                    "type": "string"
                }
            }
        },
        "model.CreateBalanceResponse": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                }
            }
        },
        "model.CustomTime": {
            "type": "object",
            "properties": {
                "time.Time": {
                    "type": "string"
                }
            }
        },
        "model.DepositeRequestParam": {
            "type": "object",
            "required": [
                "amount",
                "currency"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "currency": {
                    "type": "string"
                }
            }
        },
        "model.DepositeResponse": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                }
            }
        },
        "model.GetBalanceResponse": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                }
            }
        },
        "model.GetUserInfoResponse": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Balance"
                    }
                },
                "birthdate": {
                    "$ref": "#/definitions/model.CustomTime"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "model.ListActivityResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "string"
                },
                "createAt": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        },
        "model.LoginRequestParam": {
            "type": "object",
            "required": [
                "name",
                "password"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "model.LoginResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "model.SignUpRequestParam": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "birthdate": {
                    "type": "string"
                },
                "email": {
                    "description": "幣種",
                    "type": "string"
                },
                "name": {
                    "description": "帳號",
                    "type": "string"
                },
                "password": {
                    "description": "密碼",
                    "type": "string"
                }
            }
        },
        "model.SignUpResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "model.TransferRequestParam": {
            "type": "object",
            "required": [
                "amount",
                "currency",
                "toUserId"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "currency": {
                    "type": "string"
                },
                "toUserId": {
                    "type": "integer"
                }
            }
        },
        "model.TransferResponse": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                }
            }
        },
        "model.WithdrawRequestParam": {
            "type": "object",
            "required": [
                "amount",
                "currency"
            ],
            "properties": {
                "amount": {
                    "type": "number"
                },
                "currency": {
                    "type": "string"
                }
            }
        },
        "model.WithdrawResponse": {
            "type": "object",
            "properties": {
                "balance": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                }
            }
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Swagger SimpleBank API",
	Description:      "This is a simple bank server.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
