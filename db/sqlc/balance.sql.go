// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: balance.sql

package sqlc

import (
	"context"
)

const getBalanceByUser = `-- name: GetBalanceByUser :many
SELECT id, user_id, currency, balance, created_at FROM balance
WHERE user_id = $1
ORDER BY currency
`

func (q *Queries) GetBalanceByUser(ctx context.Context, userID int32) ([]Balance, error) {
	rows, err := q.db.QueryContext(ctx, getBalanceByUser, userID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Balance
	for rows.Next() {
		var i Balance
		if err := rows.Scan(
			&i.ID,
			&i.UserID,
			&i.Currency,
			&i.Balance,
			&i.CreatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
